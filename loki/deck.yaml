version: "1"

cluster:
  provider: k3d
  minVersion: 4.0.0
  name: loki
  nativeConfig:
    apiVersion: k3d.io/v1alpha2
    kind: Simple
    servers: 1
    agents: 1
    image: rancher/k3s:v1.22.9-k3s1
    ports:
      - port: 8080:80
        nodeFilters:
          - loadbalancer
      - port: 8443:443
        nodeFilters:
          - loadbalancer
      - port: 31112:31112
        nodeFilters:
          - agent[0]
      - port: 31820:31820/UDP
        nodeFilters:
          - agent[0]

decks:
  - name: loki
    namespace: loki
    notes: |
      Once all pods are ready, you can visit Grafana under http://grafana.127.0.0.1.nip.io:8080.
      In order to log in, use the username "admin". Get the password by running:
      kubectl get secret --namespace loki grafana -o jsonpath="{.data.admin-password}" | base64 --decode ; echo
    
    sources:
      - type: helm
        ref: https://grafana.github.io/helm-charts
        chart: loki
        releaseName: loki
        namespace: loki
        parameters:
        - name: rbac.pspEnabled
          value: false
        - name: rbac.pspUseAppArmor
          value: false
      - type: helm
        ref: https://grafana.github.io/helm-charts
        chart: grafana
        releaseName: grafana
        namespace: loki
        helmArgs:
        - --skip-tests
        parameters:
        - name: rbac.pspEnabled
          value: false
        - name: rbac.pspUseAppArmor
          value: false
        - name: serviceAccount.create
          value: true
      - type: helm
        ref: https://grafana.github.io/helm-charts
        chart: promtail
        releaseName: promtail
        namespace: loki
        parameters:
        - name: config.clients[0].url
          value: http://loki:3100/loki/api/v1/push
      - type: file
        content:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            name: grafana-ingress
          spec:
            rules:
              - host: grafana.127.0.0.1.nip.io
                http:
                  paths:
                    - path: /
                      pathType: ImplementationSpecific
                      backend:
                        service:
                          name: grafana
                          port:
                            number: 80
